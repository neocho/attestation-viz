import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import clsx from "clsx";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

function Card({ title, subtitle, loading, data }) {
  return (
    <div>
      <div>
        <h1>{title}</h1>
        <p>{subtitle}</p>
      </div>
      {loading ? (
        <div>
          <p>Loading...</p>
        </div>
      ) : (
        <div>
          {data?.length === 0 && <p>No data found!</p>}
          {data?.length > 0 &&
            data.map((val, idx) => <p key={idx}>{JSON.stringify(val)}</p>)}
        </div>
      )}
    </div>
  );
}

export default function Home() {
  const [loadingData, setLoadingData] = useState(false);
  const [allAttestations, setAllAttestations] = useState([]);
  const [creatorStats, setCreatorStats] = useState([]);
  const [subjectStats, setSubjectStats] = useState([]);
  const [loadingDataError, setLoadingDataError] = useState(null);
  const urls = [
    "/api/subjectStats",
    "/api/creatorStats",
    "/api/allAttestations",
  ];

  useEffect(() => {
    async function getData() {
      setLoadingData(true);

      try {
        await Promise.allSettled([
          getSubjectStats(),
          getCreatorStats(),
          getAllAttestations(),
        ]);
      } catch (e) {
        setLoadingDataError(e.message);
      }

      setLoadingData(false);
    }

    getData();
  }, []);

  async function getSubjectStats() {
    try {
      const resp = await fetch("/api/subjectStats");
      const parse = await resp.json();
      setSubjectStats(parse.data);
    } catch (e) {
      throw new Error(e.message);
    }
  }

  async function getCreatorStats() {
    try {
      const resp = await fetch("/api/creatorStats");
      const parse = await resp.json();
      setCreatorStats(parse.data);
    } catch (e) {
      throw new Error(e.message);
    }
  }

  async function getAllAttestations() {
    try {
      const resp = await fetch("/api/allAttestations");
      const parse = await resp.json();
      setAllAttestations(parse.data);
    } catch (e) {
      throw new Error(e.message);
    }
  }

  return (
    <div
      className={clsx(
        "justify-center items-center min-h-screen",
        inter.variable
      )}
    >
      <Head>
        <title>OP Attestation Graph</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="max-w-[700px] mx-auto px-4 py-4 ">
        <p className="font-bold ">OP Attestation Graph</p>
      </div>

      <div>{loadingDataError && <p>{loadingDataError}</p>}</div>

      <div className="flex flex-row space-x-20">
        <Card
          title={"Attestation Count by Subject"}
          subtitle={"We filter and count the attestations by what it's about"}
          loading={loadingData}
          data={subjectStats}
          error={loadingDataError}
        />

        <Card
          title={"Attestation Count by Creator"}
          subtitle={"We filter and count the attestations by who created it"}
          loading={loadingData}
          data={creatorStats}
          error={loadingDataError}
        />

        <Card
          title={"All Attestations"}
          subtitle={"We return all attestations"}
          loading={loadingData}
          data={allAttestations}
          error={loadingDataError}
        />
      </div>
    </div>
  );
}
